#lang racket (define-namespace-anchor a)(define n(namespace-anchor->namespace a))(define f"#lang racket (define-namespace-anchor a)(define n(namespace-anchor->namespace a))(define f~v)(define p'~s)(eval p n)")(define p'(let* ((c (processor-count)) (b (/ 50000 c)) (l (for/list ((i c)) (future (λ () (for ((j b)) (call-with-output-file (format "~s~s" i j) (λ (out) (fprintf out f f p))))))))) (for ((k l)) (touch k))))(eval p n)